# Base Docker Compose configuration with common services and configurations
# This file contains reusable components for E2E testing

# Common configurations
x-gitea-common: &gitea-common
  image: gitea/gitea:1.21
  environment:
    - GITEA__security__INSTALL_LOCK=true
    - GITEA__security__SECRET_KEY=e2e-test-secret-key-for-testing-only
    - GITEA__service__DISABLE_REGISTRATION=false
    - GITEA__service__REQUIRE_SIGNIN_VIEW=false
    - USER_UID=1000
    - USER_GID=1000
  ports:
    - "3000:3000"
  volumes:
    - gitea-data:/data
    - ./tests/e2e/gitea-config:/etc/gitea-config:ro
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:3000/"]
    interval: 10s
    timeout: 5s
    retries: 10

x-backup-restore-common: &backup-restore-common
  build:
    context: .
    dockerfile: Dockerfile
  container_name: gitea-backup-e2e
  environment:
    # Common backup configuration
    BACKUP_ENABLE: "true"
    BACKUP_PREFIX: "e2e-test"
    BACKUP_MAX_RETENTION: "3"
    # Gitea configuration
    APP_INI_PATH: "/data/gitea/conf/app.ini"
  volumes:
    - gitea-data:/data
    - ./tests/e2e/gitea-config:/etc/gitea-config:ro
    - ./tests:/tests:ro
  command: ["sleep", "infinity"]

services:
  # MySQL database service
  gitea-db-mysql:
    image: mysql:8.0
    container_name: gitea-db-mysql
    environment:
      MYSQL_ROOT_PASSWORD: gitea123
      MYSQL_DATABASE: gitea
      MYSQL_USER: gitea
      MYSQL_PASSWORD: gitea123
    ports:
      - "3306:3306"
    volumes:
      - db-mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pgitea123"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL database service
  gitea-db-postgres:
    image: postgres:15
    container_name: gitea-db-postgres
    environment:
      POSTGRES_USER: gitea
      POSTGRES_PASSWORD: gitea123
      POSTGRES_DB: gitea
    ports:
      - "5432:5432"
    volumes:
      - db-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gitea"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Gitea with MySQL
  gitea-mysql:
    <<: *gitea-common
    container_name: gitea-mysql
    environment:
      - GITEA__database__DB_TYPE=mysql
      - GITEA__database__HOST=gitea-db-mysql:3306
      - GITEA__database__NAME=gitea
      - GITEA__database__USER=gitea
      - GITEA__database__PASSWD=gitea123
      - GITEA__security__INSTALL_LOCK=true
      - GITEA__security__SECRET_KEY=e2e-test-secret-key-for-testing-only
      - GITEA__service__DISABLE_REGISTRATION=false
      - GITEA__service__REQUIRE_SIGNIN_VIEW=false
      - USER_UID=1000
      - USER_GID=1000
    volumes:
      - gitea-data:/data
      - ./tests/e2e/gitea-config/app.mysql.ini:/data/gitea/conf/app.ini:ro
      - ./tests/e2e/gitea-config:/etc/gitea-config:ro
    depends_on:
      gitea-db-mysql:
        condition: service_healthy

  # Gitea with PostgreSQL
  gitea-postgres:
    <<: *gitea-common
    container_name: gitea-postgres
    environment:
      - GITEA__database__DB_TYPE=postgres
      - GITEA__database__HOST=gitea-db-postgres:5432
      - GITEA__database__NAME=gitea
      - GITEA__database__USER=gitea
      - GITEA__database__PASSWD=gitea123
      - GITEA__security__INSTALL_LOCK=true
      - GITEA__security__SECRET_KEY=e2e-test-secret-key-for-testing-only
      - GITEA__service__DISABLE_REGISTRATION=false
      - GITEA__service__REQUIRE_SIGNIN_VIEW=false
      - USER_UID=1000
      - USER_GID=1000
    volumes:
      - gitea-data:/data
      - ./tests/e2e/gitea-config/app.postgres.ini:/data/gitea/conf/app.ini:ro
      - ./tests/e2e/gitea-config:/etc/gitea-config:ro
    depends_on:
      gitea-db-postgres:
        condition: service_healthy

  # MinIO S3-compatible storage
  s3:
    image: minio/minio:latest
    container_name: minio-e2e
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # FTP server
  ftp:
    image: fauria/vsftpd
    container_name: vsftpd-e2e
    environment:
      FTP_USER: ftpuser
      FTP_PASS: ftppass123
      PASV_ADDRESS: localhost
      PASV_MIN_PORT: 21100
      PASV_MAX_PORT: 21110
    ports:
      - "21:21"
      - "21100-21110:21100-21110"
    volumes:
      - ftp-data:/home/vsftpd
    healthcheck:
      test: ["CMD", "netstat", "-ln | grep :21 || true"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Base backup/restore process
  gitea-backup-restore-mysql-s3:
    <<: *backup-restore-common
    environment:
      # Backup configuration for S3
      BACKUP_ENABLE: "true"
      BACKUP_METHODE: "s3"
      ENDPOINT_URL: "http://s3:9000"
      AWS_ACCESS_KEY_ID: "minioadmin"
      AWS_SECRET_ACCESS_KEY: "minioadmin123"
      BUCKET: "gitea-backup"
      BACKUP_PREFIX: "e2e-test"
      BACKUP_MAX_RETENTION: "3"
      # Gitea configuration
      APP_INI_PATH: "/data/gitea/conf/app.ini"
    depends_on:
      gitea-mysql:
        condition: service_healthy
      s3:
        condition: service_healthy

  gitea-backup-restore-postgres-s3:
    <<: *backup-restore-common
    environment:
      # Backup configuration for S3
      BACKUP_ENABLE: "true"
      BACKUP_METHODE: "s3"
      ENDPOINT_URL: "http://s3:9000"
      AWS_ACCESS_KEY_ID: "minioadmin"
      AWS_SECRET_ACCESS_KEY: "minioadmin123"
      BUCKET: "gitea-backup"
      BACKUP_PREFIX: "e2e-test"
      BACKUP_MAX_RETENTION: "3"
      # Gitea configuration
      APP_INI_PATH: "/data/gitea/conf/app.ini"
    depends_on:
      gitea-postgres:
        condition: service_healthy
      s3:
        condition: service_healthy

  gitea-backup-restore-mysql-ftp:
    <<: *backup-restore-common
    environment:
      # Backup configuration for FTP
      BACKUP_ENABLE: "true"
      BACKUP_METHODE: "ftp"
      FTP_HOST: "ftp"
      FTP_PORT: "21"
      FTP_USER: "ftpuser"
      FTP_PASSWORD: "ftppass123"
      FTP_PATH: "/backup"
      BACKUP_PREFIX: "e2e-test"
      BACKUP_MAX_RETENTION: "3"
      # Gitea configuration
      APP_INI_PATH: "/data/gitea/conf/app.ini"
    depends_on:
      gitea-mysql:
        condition: service_healthy
      ftp:
        condition: service_healthy

  gitea-backup-restore-postgres-ftp:
    <<: *backup-restore-common
    environment:
      # Backup configuration for FTP
      BACKUP_ENABLE: "true"
      BACKUP_METHODE: "ftp"
      FTP_HOST: "ftp"
      FTP_PORT: "21"
      FTP_USER: "ftpuser"
      FTP_PASSWORD: "ftppass123"
      FTP_PATH: "/backup"
      BACKUP_PREFIX: "e2e-test"
      BACKUP_MAX_RETENTION: "3"
      # Gitea configuration
      APP_INI_PATH: "/data/gitea/conf/app.ini"
    depends_on:
      gitea-postgres:
        condition: service_healthy
      ftp:
        condition: service_healthy

volumes:
  minio-data:
  ftp-data:
  db-mysql-data:
  db-postgres-data:
  gitea-data: