name: Parallel E2E Tests (Optional)

on:
  workflow_dispatch:  # Manual trigger only for now
    inputs:
      run_parallel:
        description: 'Run E2E tests in parallel'
        required: false
        default: 'false'
        type: boolean

jobs:
  parallel-e2e:
    if: github.event.inputs.run_parallel == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - name: "MySQL + S3"
            compose_file: "docker-compose.e2e.yml"
            script: "basic_e2e_test.sh"
            port_offset: 0
          - name: "PostgreSQL + S3" 
            compose_file: "docker-compose.e2e.postgres.yml"
            script: "postgres_e2e_test.sh"
            port_offset: 100
          - name: "MySQL + FTP"
            compose_file: "docker-compose.e2e.ftp.yml" 
            script: "ftp_e2e_test.sh"
            port_offset: 200
          - name: "PostgreSQL + FTP"
            compose_file: "docker-compose.e2e.postgres-ftp.yml"
            script: "postgres_ftp_e2e_test.sh"
            port_offset: 300
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Build binaries
        run: |
          go build -o bin/gitea-backup ./cmd/gitea-backup
          go build -o bin/gitea-restore ./cmd/gitea-restore

      - name: Run parallel E2E test - ${{ matrix.config.name }}
        env:
          PORT_OFFSET: ${{ matrix.config.port_offset }}
          COMPOSE_PROJECT_NAME: e2e_${{ matrix.config.port_offset }}
        run: |
          echo "ðŸ§ª Running E2E test: ${{ matrix.config.name }}"
          echo "Using port offset: ${{ matrix.config.port_offset }}"
          
          # Note: For true parallel execution, docker-compose files would need 
          # to be modified to use different ports based on PORT_OFFSET
          # This is a demonstration of how parallel testing could be structured
          
          # For now, we'll run them with project name isolation
          chmod +x tests/e2e/${{ matrix.config.script }}
          
          # Run with unique project name to avoid conflicts
          export COMPOSE_PROJECT_NAME=e2e_${{ matrix.config.port_offset }}
          ./tests/e2e/${{ matrix.config.script }}

  sequential-e2e:
    if: github.event.inputs.run_parallel != 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Build binaries
        run: |
          go build -o bin/gitea-backup ./cmd/gitea-backup
          go build -o bin/gitea-restore ./cmd/gitea-restore

      - name: Run sequential E2E tests
        run: |
          echo "ðŸ§ª Running E2E tests sequentially (recommended)..."
          make test-e2e-all
          echo "âœ… All E2E tests completed successfully"